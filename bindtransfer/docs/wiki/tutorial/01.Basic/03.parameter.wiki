* パラメータの取得

次のチュートリアルでは、コントローラーでパラメータを取得する方法を説明します。
ここで取得するパラメータは次の通りです。

- GET値
- POST値
- Cookie値
- セッション値

このチュートリアルでは、次の操作を行います。

+ アプリケーションディレクトリにHTMLとコントローラーを設置する
+ 仮想スクリーンの動作を確認する
+ サンプル実行


* 01.アプリケーションディレクトリにHTMLとコントローラーを設置する

先ほどと同じくindex.htmlを設置します。

{{{
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="content-script-Type" content="text/javascript" />
    <meta http-equiv="content-style-type" content="text/css" />
    <title>パラメータの取得</title>
</head>
<body class="pxdebug-disable">
    <h1>パラメータの取得</h1>

    <h2>GET値</h2>
    <p>testvalue = <!--{$get1}--></p>
    <p><a href="./?get1=TestData">GETにテストデータを設定してアクセスする</a></p>

    <h2>POST値</h2>
    <p>post1 = <!--{$post1}--></p>
    <form action="./" method="post">
        <input type="text" name="post1" value="POSTテストデータ" />
        <input type="submit" value="送信" />
    </form>

    <h2>Cookie値</h2>
    <p><a href="./?cookieclear=true">Cookie削除する</a></p>
    <p><a href="./?setcookie=CookieTestData">Cookieに値を設定する</a></p>
    <p>cookie1 = <!--{$cookie1}--></p>

    <h2>セッション値</h2>
    <p><a href="./?sessionclear=true">セッション削除する</a></p>
    <p><a href="./?setsession=SessionTestData">セッションに値を設定する</a></p>
    <p>session1 = <!--{$session1}--></p>

</body>
</html>
}}}


index.htmlと同階層に''.index.php''を作成します。

{{{
<?php

class index extends xFrameworkPX_Controller_Action
{
    public function execute()
    {
        // GET値の取得
        $get1 = 'なし';
        if (isset($this->get->get1)) {
            $get1 = $this->get->get1;
        }

        $this->set('get1', $get1);


        // POST値の取得
        $post1 = 'なし';
        if (isset($this->post->post1)) {
            $post1 = $this->post->post1;
        }

        $this->set('post1', $post1);


        if (isset($this->get->setcookie)) {

            // Cookie値設定
            setcookie('cookie1', $this->get->setcookie);

        } else if(isset($this->get->cookieclear)) {

            // Cookie値設定
            setcookie('cookie1', '', time()-1);

        }

        $cookie1 = 'なし';
        if (isset($this->cookie->cookie1)) {
            $cookie1 = $this->cookie->cookie1;
        }

        $this->set('cookie1', $cookie1);


        if (isset($this->get->setsession)) {
            $this->Session->write('session1', $this->get->setsession);
        } else if(isset($this->get->sessionclear)) {
            $this->Session->destroy();
            // または
            // $this->Session->remove('session1');
        }

        $session1 = 'なし';
        if ($this->Session->read('session1')) {
            $session1 = $this->Session->read('session1');
        }

        $this->set('session1', $session1);


    }
}
}}}

** GET値
GET値を取得するためには、''$this->get''でアクセスします。


** POST値
POST値を取得するためには、''$this->post''でアクセスします。

** Cookie値
Cookie値を取得するためには、''$this->cookie''でアクセスします。
Cookie値の設定は、PHPのビルトイン関数である[[setcookie>http://php.net/manual/ja/function.setcookie.php>external]]を利用します。

** セッション値
セッション操作を行うためには、''$this->Session''でアクセスします。
パラメータアクセスと違い、この$this->Sessionはセッションコンポーネントへアクセスしています。


保存する文字コードは、''UTF-8''、改行コードは''LF''です。



* 02.仮想スクリーンの動作を確認する

index.htmlを配置し終えたら、ブラウザで'''''http://yourdomain/index.html'''''にアクセスすると仮想スクリーンとして表示が行われます。


* サンプル実行

下記のボタンから、ここまでのサンプルを実行することができます。

[[&img(./resources/images/demo.gif){サンプル画像};>./tutorial/basic/parameter/>external]]

** サンプル格納位置

'''bindtransfer/docs/tutorial/basic/html'''
