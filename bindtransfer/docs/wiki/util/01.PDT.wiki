* xFrameworkPX Debug Tools

デバッグモードを2に設定すると、xFrameworkPX Debug Tools(デバッガ)を利用することができます。
index.phpに次のように設定します。

{{{
xFrameworkPX_Dispatcher::getInstance()->run(
    array(
        'DEBUG' => 2
    )
);
}}}

* 起動方法

左上の''起動アイコン''をクリックするか、''F9''を押下します。
&img(./resources/images/tutorial/pdt1.png){起動アイコン};

起動が完了すると、次のような画面が表示されます。

&img(./resources/images/tutorial/pdt2.png){全体画面};


* トレース

トレースは、開発者が変数を任意で確認するための仕組みです。
次のように、コントローラーに記述することでデバッガに出力することができます。

{{{
$a = array(
    'foo' => 'bar'
);
$this->trace($a, 'mytag');
}}}


&img(./resources/images/tutorial/pdt3.png){トレース出力画面};

第一引数に、トレースしたい変数を指定します。
第二引数は、任意です。第二引数には、タグをつけることができ、グリッドの並べ替え時に便利です。


* パラメーター

パラメータは、POST/GETの値を表示します。
トレースのように、開発者が出力設定を行う必要はありません。


* セッション

セッションは、現在保存されているセッション値を表示します。
また、「削除」ボタンで選択されたセッション値を削除することができます。


* クッキー

セッションは、現在保存されているクッキー値を表示します。
また、「削除」ボタンで選択されたクッキー値を削除することができます。


* ユーザーデータ

ユーザーデータは、開発者がビューへ設定した値を表示します。
{{{
$this->set('test', 'data');
}}}

上記の場合、testの値をユーザーデータで確認することができます。


* クエリー

クエリーは、実行したSQLを確認できます。
LiveRecordを使用したクエリーに限ります。
また、デバッグモードが2の場合、クエリーの実行に失敗した場合、例外画面に失敗したクエリーが出力されます。


* プロファイル

プロファイルは、該当の画面が出力されるまでの実行時間を計測して一覧表示します。



* ショートカット

|~キー|~説明|
|t|トレース表示|
|p|パラメータ表示|
|s|セッション表示|
|k|クッキー表示|
|u|ユーザーデータ表示|
|f|プロファイル表示|
|Ctrl+Alt+C|キャッシュの削除ウィンドウ表示|
|→|次のタブへ|
|←|前のタブへ|


* 無効化

デバッグモードが2の場合でも、xFrameworkPX Debug Toolsを表示したく無い場合に、次のように設定することで無効にすることができます。
{{{
<body class="pxdebug-disable">
}}}

Bodyタグのclassに''pxdebug-disable''を追加してください。
この記述がある場合、xFrameworkPX Debug Toolsの読み込みを行いません。

