* クラス命名規則

ここで、xFrameworkPX内で作成するクラス名の命名規則ついて説明します。
開発者が作成することができるクラスは、コントローラー、モジュール（モデル）、ビヘイビア、コンポーネントになります。

* コントローラー

仮想スクリーンで動作させるアクションコントローラー、そしてスーパーアクション、グローバルアクションで設定する各コントローラーは、それぞれ命名規則が多少異なります。

** 仮想スクリーンで動作させるアクションコントローラークラス

このコントローラーのクラス名は、アクション名を指定するか、''アクション名+Action''を指定します。
次に、説明する_(アンダースコア)によるディレクトリ階層分割は適用されません。

** controllers下に配置されるコントローラークラス
controllers下に配置されるクラスは、通常スーパーアクション、グローバルアクション、そしてコンソールアクションとして利用します。
その際、設定側(super.pxmlやglobal.pxml、コンソールのappで指定するクラス名)でクラス名に_(アンダースコア)を指定すると、ディレクトリ階層の分割に利用されます。
つまり、controllers下に''xFrameworkPX''というディレクトリを作成し、''.Test.php''というファイル名で''Test''クラスを作成します。
設定側では、''xFrameworkPX_Test''というクラス名を指定することで、先に作成したコントローラークラスを利用することができます。


* モジュール（モデル）

モジュールは、modules下にクラスファイルを設置します。
この際の命名規則は、controllers下に配置する時と同様、_(アンダースコア)でディレクトリ階層の分割を利用することができます。
ただし、ファイル名はコントローラーと違い、接頭辞に.(ドット)はつきませんので注意してください。

* ビヘイビア
ビヘイビアは、behaviors下にクラスファイルを設置します。
命名規則は、モジュールと同様です。

