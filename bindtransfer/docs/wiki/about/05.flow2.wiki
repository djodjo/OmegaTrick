* xFrameworkPXの処理フロー(2)

* アクションによるコントローラー指定と仮想スクリーン
ブラウザで仮想スクリーンにアクセスする際、xFrameworkPXは許可された拡張子の場合のみ仮想スクリーン表示を実行します。
この設定は、ブートストラップで行います。デフォルトでは、拡張子htmlの場合のみ表示を試みます。

その際、アクセスしたファイル名の拡張子をのぞいた名前を''アクション名''と呼びます。
index.htmlでアクセスした場合、アクション名は''index''になります。

仮想スクリーンとして、ページを表示するためにHTMLを配置するディレクトリを''Webルートディレクトリ''と呼びます。
デフォルトでは、webappディレクトリが、このWebルートディレクトリに設定されます。
Webルートディレクトリに、index.htmlを配置することで仮想スクリーンとしてHTMLがブラウザに表示されます。

&img(./resources/images/docs/vscreen.png){仮想スクリーン表示の流れ};

ここで、xFrameworkPXが、Webルートディレクトリに存在するHTMLを表示するということはわかりました。
開発者は、さらにHTMLが表示される前に、コントローラーというクラスを作成することで、処理を挿入することができます。

設置するコントローラーのファイル名は、次の命名規則に沿った名前で設置する必要があります。

''.アクション名.php''

アクション名の前に.(ドット)をつけ、拡張子をphpにします。
クラスファイルは、次のようにxFrameworkPX_Controller_Actionを継承します。

{{{
class index extends xFrameworkPX_Controller_Action
{
    public function execute()
    {
    
    }
}
}}}

クラス名は、アクション名を指定します。
アクション名がクラス名として利用できない場合のために、''アクション名+Action''というクラス名を指定することも可能です。

上記の例では、メソッドとして''execute''メソッドを作成しました。
このexecuteメソッドを作成することにより、HTMLが表示される前に行いたい処理を記述することができます。




* スーパーアクション
スーパーアクションはxFrameworkPXが処理を実行させるとき一番初めに必ず呼び出される特殊なアクションです。スーパーアクションを定義することで、Webアプリケーションの各アクションが実行される前にスーパーアクションによって共通処理を入れることができます。

スーパーアクションの処理は、先に説明したアクションが実行されるより前に実行されます。
さらに、スーパーアクションは、グローバルアクションよりも先に実行されます。

スーパーアクションを設定するためには、Webルートディレクトリにsuper.pxmlを設置します。
デフォルトでcontroolersディレクトリ下に作成したコントローラークラスを指定します。



* グローバルアクション
グローバルアクションはxFrameworkPXが処理を実行させるときスーパーアクションの次に呼び出される特殊なアクションです。開発者が作成したアクションはスーパーアクションとグローバルアクションが実行されたあと呼び出されます。

グローバルアクションはスーパーアクション同様、Webアプリケーションの各アクションが実行される前に共通の処理を実行させるために使用しますが、スーパーアクションがWebアプリケーションで実行される全てのアクションが呼び出される前に実行されるのに対して、グローバルアクションはWebルートディレクトリの中に作成したディレクトリごとに実行させるグローバルアクションの設定を変更することができます。

グローバルアクションを設定するためには、設定したいディレクトリにglobal.pxmlを設置します。
実行されるコントローラーは、スーパーアクションと同様にデフォルトでcontrollersディレクトリ下に作成したコントローラークラスを指定します。



''アクションクラスの具体的な処理の記述方法、スーパーアクション・グローバルアクションの設定方法については、「コントローラー」の項目を参照してください。''



* まとめ

xFrameworkPXの処理の流れは、ディスパッチャーから始まり、スーパーアクション・グローバルアクションに設定されたコントローラーが実行され、URLに指定されたファイル名を元にしたアクション名のコントローラーが実行され、HTMLが出力されるという流れになります。

xFrameworkPXの特徴として、プログラムを書くことから始めるのではなく、先に画面（仮想スクリーン）を作成し処理を挟み込んでいく開発手法になります。
さらに、ドキュメントルートと同じ構造でWebルートディレクトリを作成することができるため、開発開始時、先にデザイナに画面を作成してもらってから、処理を挟み込むような進め方もできますし、プログラムが組み込まれている仮想スクリーンに対して画面デザインを変更する際も、デザイナは通常のドキュメントルートに存在する構成と同じ構成で作業することができます。


